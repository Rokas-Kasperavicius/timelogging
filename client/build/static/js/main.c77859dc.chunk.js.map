{"version":3,"sources":["logo.svg","components/Stepper.js","fields/DateTimeField.js","fields/DateField.js","fields/DropdownField.js","fields/InputField.js","fields/CheckboxField.js","App.js","reportWebVitals.js","index.js"],"names":["withStyles","alternativeLabel","top","left","right","active","borderColor","completed","line","borderTopWidth","borderRadius","StepConnector","makeStyles","root","color","display","height","alignItems","circle","width","backgroundColor","zIndex","fontSize","DateTimeField","name","rules","onChangeCustom","onChange","control","useFormContext","initialFocusedDate","Date","Math","floor","getTime","render","value","utils","DateFnsUtils","DateTimePicker","minutesStep","autoOk","okLabel","format","ampm","disableFuture","showTodayButton","DateField","views","style","DatePicker","options","defaultOptions","useState","setOptions","useEffect","map","key","text","handleAddition","e","Dropdown","placeholder","search","selection","fluid","allowAdditions","additionLabel","onAddItem","InputField","multiline","register","TextField","inputRef","label","rows","variant","Checkbox","checked","target","useStyles","theme","modal","justifyContent","paper","palette","background","border","primary","main","padding","spacing","outline","tooltip","App","classes","queryClient","useQueryClient","history","useHistory","queryString","parse","useLocation","year","getFullYear","month","data","useQuery","console","log","React","open","setOpen","methods","useForm","defaultValues","startDate","endDate","logDate","task","isLogged","a","axios","tasks","refreshTasks","refetch","handleSubmit","watch","getValues","errors","reset","setValue","formState","mutation","useMutation","method","url","onSuccess","setQueryData","groupBy","sortBy","values","push","handleDateChange","getMonth","getDate","useInView","document","getElementById","rootMargin","initialInView","ref","inView","fetchNextPage","addMonth","monthCount","newDate","add","months","sortedCalendar","undefined","pages","concat","className","Button","startIcon","onClick","textAlign","upperFirst","toLowerCase","marginTop","TableContainer","id","maxHeight","Table","stickyHeader","size","TableHead","TableRow","TableCell","borderBottomColor","maxWidth","colSpan","align","isLoading","isSuccess","dates","TableBody","index","differenceInHours","differenceInMinutes","description","Tooltip","title","placement","TransitionComponent","Zoom","arrow","IconButton","hasNextPage","CircularProgress","Modal","onClose","closeAfterTransition","BackdropComponent","Backdrop","Fade","in","onSubmit","mutate","createdAt","required","validate","DropdownField","CheckboxField","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","QueryClient","setDefaultOptions","queries","staleTime","cacheTime","Infinity","darkTheme","createMuiTheme","cyan","ReactDOM","QueryClientProvider","client","ThemeProvider","to","path","pathname","initialIsOpen"],"mappings":"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","file":"static/js/main.c77859dc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Steps from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Check from '@material-ui/icons/Check';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport VideoLabelIcon from '@material-ui/icons/VideoLabel';\nimport StepConnector from '@material-ui/core/StepConnector';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst QontoConnector = withStyles({\n  alternativeLabel: {\n    top: 10,\n    left: 'calc(-50% + 16px)',\n    right: 'calc(50% + 16px)',\n  },\n  active: {\n    '& $line': {\n      borderColor: '#784af4',\n    },\n  },\n  completed: {\n    '& $line': {\n      borderColor: '#784af4',\n    },\n  },\n  line: {\n    borderColor: '#eaeaf0',\n    borderTopWidth: 3,\n    borderRadius: 1,\n  },\n})(StepConnector);\n\nconst useQontoStepIconStyles = makeStyles({\n  root: {\n    color: '#eaeaf0',\n    display: 'flex',\n    height: 22,\n    alignItems: 'center',\n  },\n  active: {\n    color: '#784af4',\n  },\n  circle: {\n    width: 8,\n    height: 8,\n    borderRadius: '50%',\n    backgroundColor: 'currentColor',\n  },\n  completed: {\n    color: '#784af4',\n    zIndex: 1,\n    fontSize: 18,\n  },\n});\n\nfunction QontoStepIcon(props) {\n  const classes = useQontoStepIconStyles();\n  const { active, completed } = props;\n\n  return (\n    <div\n      className={clsx(classes.root, {\n        [classes.active]: active,\n      })}\n    >\n      {completed ? <Check className={classes.completed} /> : <div className={classes.circle} />}\n    </div>\n  );\n}\nfunction getSteps() {\n  return ['Fill information', 'Confirmation'];\n}\n\nconst Stepper = () => {\n  const steps = getSteps();\n\n  return (\n    <Steps alternativeLabel activeStep={1} connector={<QontoConnector />}>\n      {steps.map((label) => (\n        <Step key={label}>\n          <StepLabel StepIconComponent={QontoStepIcon}>{label}</StepLabel>\n        </Step>\n      ))}\n    </Steps>\n  )\n}\n\nexport default Stepper","import React from 'react'\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, DateTimePicker } from '@material-ui/pickers'\nimport { Controller, useFormContext } from 'react-hook-form'\n\nconst DateTimeField = ({\n  name,\n  rules,\n  onChange: onChangeCustom,\n}) => {\n  const { control } = useFormContext()\n  const initialFocusedDate = new Date(Math.floor(new Date().getTime() / (1000 * 60 * 5)) * 1000 * 60 * 5) // Rounds to nearest 5 minutes\n\n  return (\n    <Controller\n      name={name}\n      control={control}\n      rules={rules}\n      render={({ value, onChange }) => (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <DateTimePicker\n            // error\n            // helperText='KYS'\n            value={value}\n            onChange={(value) => {\n              onChange(value)\n\n              if (onChangeCustom) {\n                onChangeCustom()\n              }\n            }}\n            minutesStep={5}\n            autoOk={true}\n            okLabel=''\n            format={'y LLL d, HH:mm'}\n            // emptyLabel={'NNANANA'}\n            ampm={false}\n            initialFocusedDate={initialFocusedDate}\n            disableFuture\n            showTodayButton\n          />\n        </MuiPickersUtilsProvider>\n      )}\n    />\n  )\n}\n\nexport default DateTimeField","import React from 'react'\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers'\nimport { Controller, useFormContext } from 'react-hook-form'\n\nconst DateField = ({\n  name,\n  rules,\n  views,\n  style,\n}) => {\n  const { control } = useFormContext()\n\n  return (\n    <Controller\n      name={name}\n      control={control}\n      rules={rules}\n      render={({ value, onChange }) => (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <DatePicker\n            // error\n            // helperText='KYS'\n            style={style}\n            value={value}\n            views={views}\n            autoOk={true}\n            okLabel=''\n            onChange={onChange}\n            format={'y LLLL'}\n            // emptyLabel={'NNANANA'}\n            showTodayButton\n          />\n        </MuiPickersUtilsProvider>\n      )}\n    />\n  )\n}\n\nexport default DateField","import React, { useState, useEffect } from 'react'\nimport { Dropdown } from 'semantic-ui-react'\nimport { Controller, useFormContext } from 'react-hook-form'\n\nimport Add from '@material-ui/icons/Add';\n\nconst tasks = [\n  { key: 'English', text: 'English', value: 'English' },\n  { key: 'French', text: 'French', value: 'French' },\n  { key: 'Spanish', text: 'Spanish', value: 'Spanish' },\n  { key: 'German', text: 'German', value: 'German' },\n  { key: 'Chinese', text: 'Chinese', value: 'Chinese' },\n]\n\nconst mapToOptions = (data) => data.map(value => ({\n  key: value,\n  text: value,\n  value,\n}))\n\nconst DateField = ({\n  name,\n  rules,\n  options: defaultOptions = [],\n}) => {\n  const { control } = useFormContext()\n\n  const [options, setOptions] = useState([])\n\n  useEffect(() => {\n    setOptions(mapToOptions(defaultOptions))\n  }, [defaultOptions])\n\n  const handleAddition = (e, { value }) => {\n    setOptions([{ text: value, key: value, value }, ...options])\n  }\n\n  return (\n    <Controller\n      name={name}\n      control={control}\n      rules={rules}\n      render={({ value, onChange }) => { return (\n        <Dropdown\n          options={options}\n          placeholder='Choose Task ID'\n          search\n          selection\n          fluid\n          allowAdditions\n          additionLabel='New task '\n          value={value}\n          onAddItem={handleAddition}\n          onChange={(e, { value }) => onChange(value)}\n        />\n      )}}\n    />\n  )\n}\n\nexport default DateField","import TextField from '@material-ui/core/TextField';\nimport { useFormContext } from 'react-hook-form'\n\nconst InputField = ({\n  name,\n  rules,\n  multiline = false,\n}) => {\n  const { register } = useFormContext()\n\n  return (\n    <TextField\n      inputRef={register(rules)}\n      name={name}\n      label=\"Multiline\"\n      multiline={multiline}\n      rows={4}\n      variant=\"outlined\"\n    />\n    // <input name={name} ref={register} />\n  )\n}\n\nexport default InputField","import React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Controller, useFormContext } from 'react-hook-form'\n\nconst DateField = ({\n  name,\n  rules,\n}) => {\n  const { control } = useFormContext()\n\n  return (\n    <Controller\n      name={name}\n      control={control}\n      rules={rules}\n      render={({ value, onChange }) => (\n        <Checkbox\n          checked={value}\n          color='primary'\n          onChange={e => onChange(e.target.checked)}\n        />\n      )}\n    />\n  )\n}\n\nexport default DateField","import React, { useState, useEffect, useRef, useMemo } from 'react'\nimport logo from './logo.svg'\nimport './App.css'\nimport {\n  useQuery,\n  useQueryClient,\n  useMutation,\n  useInfiniteQuery,\n  InfiniteQueryObserver,\n} from 'react-query'\n\nimport {\n  useLocation,\n  useHistory,\n} from \"react-router-dom\";\n\n\nimport formatISO from 'date-fns/formatISO'\n\nimport {DatePicker,\n  TimePicker,\n  DateTimePicker, } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport blue from \"@material-ui/core/colors/blue\";\nimport cyan from \"@material-ui/core/colors/cyan\";\nimport { createMuiTheme } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport AddIcon from '@material-ui/icons/Add';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport { useForm, Controller, FormProvider } from \"react-hook-form\";\n\nimport { Stepper } from 'components'\nimport { Dropdown, Input } from 'semantic-ui-react'\nimport { Select, Ref } from 'semantic-ui-react'\nimport axios from 'axios'\nimport { format, add, differenceInHours, differenceInMinutes } from 'date-fns'\n\nimport { useInView } from 'react-intersection-observer';\n\nimport queryString from 'query-string'\n\nimport { DateTimeField, DateField, DropdownField, InputField, CheckboxField } from 'fields'\n\nimport { groupBy, map, chain, sortBy, upperFirst, concat } from 'lodash'\n\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport EditIcon from '@material-ui/icons/Edit'\n\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Zoom from '@material-ui/core/Zoom'\nimport { YearSelection } from '@material-ui/pickers/views/Year/YearView';\n\nconst options = [\n  { key: 'English', text: 'English', value: 'English' },\n  { key: 'French', text: 'French', value: 'French' },\n  { key: 'Spanish', text: 'Spanish', value: 'Spanish' },\n  { key: 'German', text: 'German', value: 'German' },\n  { key: 'Chinese', text: 'Chinese', value: 'Chinese' },\n]\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: `2px solid ${theme.palette.primary.main}`,\n    // boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    outline: 0,\n    borderRadius: '4px',\n    color: theme.palette.text.primary\n  },\n  tooltip: {\n    fontSize: '13px'\n  }\n}));\n\nconst App = () => {\n  const classes = useStyles();\n  const queryClient = useQueryClient()\n\n  const [page, setPage] = useState(0)\n\n  const history = useHistory()\n\n  const { year = new Date().getFullYear(), month = format(new Date(), 'MMMM') } = queryString.parse(useLocation().search)\n\n  const [pageCount, setPageCount] = useState(null)\n\n  // const { data: sortedCalendar, isLoading, isSuccess } = useQuery(['calendar', year, month], async () => {\n  //   const res = await fetch(`/api/calendar?year=${year}&month=${month}&page=${1}`)\n  //   const data = await res.json()\n  //   return data\n  // })\n\n  const data = useQuery(['test', year, month], null)\n\n  // , async ({ pageParam = 0 }) => {\n  //   console.log(pageParam)\n  //   const res = await fetch(`/api/calendar?year=${year}&month=${month}&page=${pageParam}`)\n  //   const data = await res.json()\n  //   setPageCount(data.pages)\n  //   // return data.data\n\n  //   queryClient.setQueryData(['test', year, month], 'test')\n  // }, {\n  //   // getNextPageParam: (lastPage, pages) => pages.length >= pageCount ? undefined : pages.length,\n  //   getNextPageParam: undefined,\n  // }\n\n  useEffect(() => {\n    console.log('Fetch stuff')\n  }, [year, month])\n\n  // useEffect(() => {\n  //   data.refetch()\n  // }, [year, month])\n  // console.log(data)\n\n  // groupBy(sortBy(data, 'startDate'), (values) =>\n  //   format(new Date(values.startDate), 'yyyy MMMM dd'))\n\n  // const sortedCalendar = useMemo(() =>\n  //   groupBy(sortBy(data, 'startDate'), (values) =>\n  //     format(new Date(values.startDate), 'yyyy MMMM dd'))\n  // , [data])\n  const [open, setOpen] = React.useState(false)\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const methods = useForm({\n    defaultValues: {\n      startDate: null,\n      endDate: null,\n      logDate: null,\n      task: null,\n      isLogged: false,\n    },\n  })\n\n  const { data: tasks, refetch: refreshTasks } = useQuery('tasks', async () => {\n    const { data } = await axios('/api/tasks')\n\n    return data\n  })\n\n  const { register, handleSubmit, watch, errors, control, reset, getValues, formState, setValue } = methods\n  const onSubmit = data => {\n    mutation.mutate({\n      ...data,\n      year: format(data.logDate, 'y'),\n      month: format(data.logDate, 'LLLL'),\n      createdAt: new Date(),\n    })\n  }\n\n  const mutation = useMutation(data => {\n    return axios({\n      method: 'post',\n      url: '/api/calendar',\n      data,\n    });\n  }, {\n    onSuccess: (data, { year, month }) => {\n      queryClient.setQueryData(['calendar', year, month], groupBy(sortBy(data.data, 'startDate'), (values) =>\n      format(new Date(values.startDate), 'yyyy MMMM dd')))\n      refreshTasks()\n      history.push(`/calendar?year=${year}&month=${month}`)\n    },\n  })\n\n  const handleDateChange = () => {\n    const startDate = getValues('startDate')\n    const endDate = getValues('endDate')\n\n    if (startDate && endDate) {\n      const year = startDate.getFullYear()\n      let month = startDate.getMonth()\n      const date = startDate.getDate()\n      \n      if (date >= 20) {\n        month++\n      }\n      console.log(new Date(year, month))\n      setValue('logDate', new Date(year, month))\n      console.log(getValues('logDate'))\n    }\n  }\n\n  const { ref, inView } = useInView({\n    root: document.getElementById('test'),\n    rootMargin: '0px 0px 300px 0px',\n    initialInView: false,\n  });\n\n  const fetchNextPage = data.fetchNextPage\n\n  const handleFetch = async () => {\n    // console.log('fetching')\n    await new Promise(r => setTimeout(r, 1000));\n    fetchNextPage()\n  }\n\n  useEffect(() => {console.log('MOUNTED')}, [])\n\n  useEffect(() => {\n    // console.log(inView)\n    if (inView && fetchNextPage) {\n      // handleFetch()\n    }\n  }, [inView, fetchNextPage])\n\n  const addMonth = (monthCount) => {\n    console.log(fetchNextPage)\n    // fetchNextPage({ pageParam: 12 })\n    const newDate = add(new Date(`${year} ${month}`), { months: monthCount })\n    history.push(`/calendar?year=${newDate.getFullYear()}&month=${format(newDate, 'MMMM')}`)\n  }\n\n  const logDate = watch('logDate')\n\n\n  let sortedCalendar = undefined\n\n  console.log('render')\n  if (data && data.data && data.data.pages) {\n    sortedCalendar = groupBy(concat(...data.data.pages), (values) =>\n      format(new Date(values.startDate), 'yyyy MMMM dd'))\n  }\n\n  return (\n    <div className=\"App\">\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          onClick={handleOpen}\n        >\n          log time\n        </Button>\n        <div style={{ color: 'white', display: 'flex', alignItems: 'center' }}>\n          <Button variant='outlined' color=\"primary\" onClick={() => addMonth(-1)}><ArrowBackIcon /></Button>\n          <span>&nbsp;&nbsp;{year}</span>\n          <span style={{ width: '71px', textAlign: 'center' }}>{upperFirst(month.toLowerCase())}&nbsp;</span>\n          <Button variant='outlined' color=\"primary\" onClick={() => addMonth(1)}><ArrowForwardIcon /></Button>\n        </div>\n      </div>\n      <div style={{ marginTop: '20px' }}>\n        <TableContainer id='test' style={{ maxHeight: '90vh' }}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                <TableCell style={{ borderBottomColor: '#303030' }} size='medium'>Task</TableCell>\n                <TableCell style={{ borderBottomColor: '#303030' }} size='medium'>Time spent</TableCell>\n                <TableCell style={{ borderBottomColor: '#303030' }} size='medium'>Time range</TableCell>\n                <TableCell style={{ borderBottomColor: '#303030', maxWidth: '100px' }} size='medium'>Task description</TableCell>\n                <TableCell style={{ borderBottomColor: '#303030' }} size='medium'>Task status</TableCell>\n                <TableCell style={{ borderBottomColor: '#303030' }} colSpan={2} size='medium' align='center'>Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <>\n              {!data.isLoading && data.isSuccess && map(sortedCalendar, (dates, logDate) => (\n                <>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell colSpan={7} style={{ top: '54px' }} size='medium'>{logDate}</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {dates.map((values, index) => (\n                      <TableRow>\n                        <TableCell>{values.task}</TableCell>\n                        <TableCell>{differenceInHours(new Date(values.endDate), new Date(values.startDate))}h {differenceInMinutes(new Date(values.endDate), new Date(values.startDate)) - (60 * differenceInHours(new Date(values.endDate), new Date(values.startDate)))}m</TableCell>\n                        <TableCell>{`(${format(new Date(values.startDate), 'HH.mm')}`} &ndash; {format(new Date(values.endDate), 'HH.mm')})</TableCell>\n                        <TableCell style={{ maxWidth: '100px' }}>{values.description}</TableCell>\n                        <TableCell>{values.isLogged ? 'Logged' : 'Not logged'}</TableCell>\n                        <TableCell style={{ width: '10px' }}>\n                          <Tooltip classes={{ tooltip: classes.tooltip }} title='Edit' placement=\"top\" TransitionComponent={Zoom} arrow>\n                            <IconButton color='primary'>\n                              <EditIcon />\n                            </IconButton>\n                          </Tooltip>\n                        </TableCell>\n                        <TableCell style={{ width: '10px' }}>\n                          <Tooltip classes={{ tooltip: classes.tooltip }} title='Delete' placement=\"top\" TransitionComponent={Zoom} arrow>\n                            <IconButton color='secondary'>\n                              <DeleteIcon />\n                            </IconButton>\n                          </Tooltip>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </>\n              ))}\n            </>\n          </Table>\n          <div ref={ref} style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            height: '80px',\n          }}>\n          {!data.isLoading && data.isSuccess && data.hasNextPage && <CircularProgress />}\n          </div>\n        </TableContainer>\n      </div>\n\n      <Modal\n        open={open}\n        className={classes.modal}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}> \n            <FormProvider {...methods} >\n              <form onSubmit={handleSubmit(onSubmit)}>\n                <DateTimeField\n                  name='startDate'\n                  onChange={handleDateChange}\n                  rules={{\n                    required: true,\n                    validate: value => value < getValues('endDate')\n                  }}\n                />\n                <DateTimeField\n                  name='endDate'\n                  onChange={handleDateChange}\n                  rules={{\n                    required: true,\n                    validate: value => value > getValues('startDate')\n                  }}\n                />\n                <DateField\n                  style={{ display: logDate ? 'unset' : 'none' }}\n                  name='logDate'\n                  views={['year', 'month']}\n                  rules={{\n                    required: true,\n                  }}\n                />\n                <DropdownField\n                  name='task'\n                  options={tasks}\n                  rules={{\n                    required: true,\n                  }}\n                />\n                <InputField\n                  name='description'\n                  multiline={true}\n                  rules={{\n                    required: true,\n                  }}\n                />\n                <CheckboxField\n                  name='isLogged'\n                />\n                {/* <button\n                  type=\"button\"\n                  onClick={() => reset({\n                    startDate: null,\n                    endDate: null,\n                  })}\n                >\n                  Reset Form\n                </button> */}\n                <Button\n                  type={'submit'}\n                  variant=\"contained\"\n                  color=\"primary\"\n                >\n                  Submit\n                </Button>\n              </form>\n            </FormProvider>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  QueryClient,\n  QueryClientProvider,\n} from 'react-query'\nimport { ReactQueryDevtools } from 'react-query/devtools'\n\nimport cyan from \"@material-ui/core/colors/cyan\";\nimport { createMuiTheme } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n} from \"react-router-dom\";\n\nimport About from './About'\n\nimport 'semantic-ui-css/semantic.min.css'\n\nconst queryClient = new QueryClient()\n\nqueryClient.setDefaultOptions({\n  queries: {\n    staleTime: 1000 * 60 * 10, // 1 minute\n    cacheTime: Infinity,\n  },\n})\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: cyan['A200'],\n    },\n  },\n});\n\nReactDOM.render(\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider theme={darkTheme}>\n        <Router>\n          <div>\n            <nav>\n              <ul>\n                <li>\n                  <Link to=\"/?year=2021&month=February\">February</Link>\n                </li>\n                <li>\n                  <Link to=\"calendar\">March</Link>\n                </li>\n                <li>\n                  <Link to=\"/users\">Users</Link>\n                </li>\n              </ul>\n            </nav>\n            <Switch>\n              <Route path=\"/calendar\">       \n                <App />\n              </Route>\n              <Route path=\"/users\">       \n                <div>HI</div>\n              </Route>\n              <Redirect\n                to={{\n                  pathname: \"/calendar\",\n                }}\n              />\n            </Switch>\n          </div>\n        </Router>\n      </ThemeProvider>\n      <ReactQueryDevtools initialIsOpen={false} />\n    </QueryClientProvider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}